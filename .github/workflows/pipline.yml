name: Action
on:
  push:
    branches:
      - 'master'
  pull_request:
    types: [closed]
jobs:

 Build-Push-Container-app:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push APP
        uses: docker/build-push-action@v5
        with:
          context: ./app/
          file: ./app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:${{ secrets.DOCKERHUB_USERNAME }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/mihaildanailovdimovski/app:${{ secrets.DOCKERHUB_USERNAME }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.sarif'
          
 Build-Push-Container-oracle:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push oracle_flyway
        uses: docker/build-push-action@v5
        with:
          context: ./oracle_flyway/
          file: ./oracle_flyway/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/oracle_flyway:${{ secrets.DOCKERHUB_USERNAME }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/mihaildanailovdimovski/oracle_flyway:${{ secrets.DOCKERHUB_USERNAME }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.sarif'
    
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

 Truffle-HOG-Secret-Scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        extra_args: --only-verified

 security-snyk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/scala@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
 ansible:
    needs: [Build-Push-Container-app, Build-Push-Container-oracle, security-snyk, Truffle-HOG-Secret-Scan]
    runs-on: self-hosted
    steps:
    -
      name: STOP CONTAINERS IF ANY ARE RUNNING
      run: if [ "$(docker ps -q)" ]; then docker stop $(docker ps -q); fi
    -
      name: REMOVE LEFTOVER CONTAINERS
      run: docker container prune -f
      
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Run Ansible Playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
          playbook: playbook.yml
          directory: ./ansible
          options: -vvv --vault-pass-file /home/misho/pass_vault -i inventory.ini -b -e "ansible_become_password=${{ secrets.PASS }}"
